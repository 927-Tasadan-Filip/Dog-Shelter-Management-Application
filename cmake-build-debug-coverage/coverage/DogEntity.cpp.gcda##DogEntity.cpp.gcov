        -:    0:Source:/mnt/c/Users/Filip/Documents/GitHub/a67-917-Tasadan-Filip/Entity/DogEntity.cpp
        -:    0:Graph:/mnt/c/Users/Filip/Documents/GitHub/a67-917-Tasadan-Filip/cmake-build-debug-coverage/CMakeFiles/a67_917_Tasadan_Filip.dir/Entity/DogEntity.cpp.gcno
        -:    0:Data:/mnt/c/Users/Filip/Documents/GitHub/a67-917-Tasadan-Filip/cmake-build-debug-coverage/CMakeFiles/a67_917_Tasadan_Filip.dir/Entity/DogEntity.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by Filip on 17-Mar-21.
        -:    3://
        -:    4:
        -:    5:#include "DogEntity.h"
        -:    6:
        -:    7:
       18:    8:Dog::Dog(std::string breed, std::string name, int age, std::string photograph) {
       18:    8-block  0
    $$$$$:    8-block  1
    $$$$$:    8-block  2
    $$$$$:    8-block  3
       18:    9:    this->breed = breed;
       18:   10:    this->name = name;
       18:   10-block  0
       18:   11:    this->age = age;
       18:   12:    this->photograph = photograph;
       18:   12-block  0
       18:   13:}
       18:   13-block  0
        -:   14:
        2:   15:Dog::Dog(std::string name) {
        2:   15-block  0
    $$$$$:   15-block  1
    $$$$$:   15-block  2
    $$$$$:   15-block  3
        2:   16:    this->breed = "";
        2:   17:    this->name = name;
        2:   17-block  0
        2:   18:    this->age = 0;
        2:   19:    this->photograph = "";
        2:   19-block  0
        2:   20:}
        2:   20-block  0
        -:   21:
        2:   22:Dog::Dog(std::string name, int age) {
        2:   22-block  0
    $$$$$:   22-block  1
    $$$$$:   22-block  2
    $$$$$:   22-block  3
        2:   23:    this->breed = "";
        2:   24:    this->name = name;
        2:   24-block  0
        2:   25:    this->age = age;
        2:   26:    this->photograph = "";
        2:   26-block  0
        2:   27:}
        2:   27-block  0
        -:   28:
        2:   29:Dog::Dog(std::string name, std::string photograph) {
        2:   29-block  0
    $$$$$:   29-block  1
    $$$$$:   29-block  2
    $$$$$:   29-block  3
        2:   30:    this->breed = "";
        2:   31:    this->name = name;
        2:   31-block  0
        2:   32:    this->age = 0;
        2:   33:    this->photograph = photograph;
        2:   33-block  0
        2:   34:}
        2:   34-block  0
        -:   35:
       16:   36:Dog::Dog() {
       16:   36-block  0
    $$$$$:   36-block  1
    $$$$$:   36-block  2
    $$$$$:   36-block  3
       16:   37:    this->breed = "";
       16:   38:    this->name = "";
       16:   38-block  0
       16:   39:    this->age = 0;
       16:   40:    this->photograph = "";
       16:   40-block  0
       16:   41:}
       16:   41-block  0
        -:   42:
       82:   43:bool Dog::operator==(const Dog& dog) {
       82:   44:    if(this->name == dog.name)
       82:   44-block  0
        4:   45:        return true;
        4:   45-block  0
       78:   46:    return false;
       78:   46-block  0
        -:   47:}
        -:   48:
        5:   49:Dog& Dog::operator=(const Dog& dog) {
        5:   50:    this->breed = dog.breed;
        5:   50-block  0
        5:   51:    this->name = dog.name;
        5:   52:    this->age = dog.age;
        5:   53:    this->photograph = dog.photograph;
        5:   54:    return *this;
        -:   55:}
        -:   56:
       15:   57:std::string Dog::getBreed() {
       15:   58:    return this->breed;
       15:   58-block  0
        -:   59:}
        -:   60:
        6:   61:std::string Dog::getName() {
        6:   62:    return this->name;
        6:   62-block  0
        -:   63:}
        -:   64:
       15:   65:int Dog::getAge() {
       15:   66:    return this->age;
       15:   66-block  0
        -:   67:}
        -:   68:
        3:   69:std::string Dog::getPhotograph() {
        3:   70:    return this->photograph;
        3:   70-block  0
        -:   71:}
        -:   72:
        2:   73:void Dog::setBreed(std::string new_breed) {
        2:   74:    this->breed = new_breed;
        2:   74-block  0
        2:   75:}
        -:   76:
        1:   77:void Dog::setName(std::string new_name) {
        1:   78:    this->name = new_name;
        1:   78-block  0
        1:   79:}
        -:   80:
        1:   81:void Dog::setAge(int new_age) {
        1:   82:    this->age = new_age;
        1:   83:}
        -:   84:
        1:   85:void Dog::setPhotograph(std::string new_photograph) {
        1:   86:    this->photograph = new_photograph;
        1:   86-block  0
        1:   87:}
        -:   88:
        1:   89:std::string Dog::getCSV() {
        1:   90:    std::string csv_string;
        1:   90-block  0
        1:   91:    csv_string += this->getBreed() + ",";
        1:   91-block  0
        1:   91-block  1
        1:   91-block  2
    $$$$$:   91-block  3
    $$$$$:   91-block  4
    $$$$$:   91-block  5
    $$$$$:   91-block  6
        1:   92:    csv_string += this->getName() + ",";
        1:   92-block  0
        1:   92-block  1
        1:   92-block  2
    $$$$$:   92-block  3
    $$$$$:   92-block  4
    $$$$$:   92-block  5
    $$$$$:   92-block  6
        1:   93:    csv_string +=  std::to_string(this->getAge()) + ",";
        1:   93-block  0
        1:   93-block  1
        1:   93-block  2
    $$$$$:   93-block  3
    $$$$$:   93-block  4
    $$$$$:   93-block  5
    $$$$$:   93-block  6
        1:   94:    csv_string += this->getPhotograph();
        1:   94-block  0
        1:   94-block  1
    $$$$$:   94-block  2
    $$$$$:   94-block  3
        1:   95:    return csv_string;
        1:   95-block  0
        -:   96:}
        -:   97:
        3:   98:std::istream& operator >>(std::istream& inputStream, Dog& dog) {
        6:   99:    std::string line;
        3:   99-block  0
    $$$$$:   99-block  1
        3:  100:    std::getline(inputStream, line);
        9:  101:    std::vector<std::string> tokens = splitLineByDelimiter(line, ",");
        3:  101-block  0
        3:  101-block  1
        3:  101-block  2
        3:  101-block  3
    $$$$$:  101-block  4
    $$$$$:  101-block  5
    $$$$$:  101-block  6
    $$$$$:  101-block  7
        3:  102:    if(tokens.size() != 4)
        3:  103:        return inputStream;
        3:  103-block  0
        -:  104:
    #####:  105:    dog.setBreed(tokens[0]);
    %%%%%:  105-block  0
    %%%%%:  105-block  1
    %%%%%:  105-block  2
    $$$$$:  105-block  3
    $$$$$:  105-block  4
    #####:  106:    dog.setName(tokens[1]);
    %%%%%:  106-block  0
    %%%%%:  106-block  1
    $$$$$:  106-block  2
    $$$$$:  106-block  3
    #####:  107:    dog.setAge(std::stoi(tokens[2]));
    %%%%%:  107-block  0
    #####:  108:    dog.setPhotograph(tokens[3]);
    %%%%%:  108-block  0
    %%%%%:  108-block  1
    $$$$$:  108-block  2
    $$$$$:  108-block  3
        -:  109:
    #####:  110:    return inputStream;
        -:  111:}
        -:  112:
        1:  113:std::ostream& operator <<(std::ostream& outputStream, Dog& dog) {
        1:  114:    outputStream << dog.getCSV();
        1:  114-block  0
        1:  114-block  1
    $$$$$:  114-block  2
        1:  115:    return outputStream;
        1:  115-block  0
        -:  116:}
